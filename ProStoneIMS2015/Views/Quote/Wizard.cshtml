@model ProStoneIMS2015.Models.Quote

@{
    ViewBag.Title = "Wizard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section customcss{
    <link href="@Url.Content("~/Content/gsdk-base.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap-datepicker3.css")" rel="stylesheet" type="text/css">

    <style>
        .wrapper {
            background: url(https://drive.google.com/uc?export=download&id=0B1xsibA--2-HRXlPX0pJQUZHbUU) no-repeat center center fixed;
            /*-webkit-filter: blur(15px);*/
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
            filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='https://drive.google.com/uc?export=download&id=0B1xsibA--2-HRXlPX0pJQUZHbUU', sizingMethod='scale');
            -ms-filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='https://drive.google.com/uc?export=download&id=0B1xsibA--2-HRXlPX0pJQUZHbUU', sizingMethod='scale');
        }

        .input-xs {
            height: 22px;
            padding: 5px 5px;
            font-size: 12px;
            line-height: 1.5;
            border-radius: 3px;
        }

        .borderless tbody tr td, .borderless tbody tr th, .borderless tfoot tr td {
            border: none;
            padding: 5px !important;
        }

        .list-group-item {
            border: 0px solid #ddd;
        }
    </style>
}

<div class="row" ng-app="gabsApp">
    <div class="col-sm-8 col-sm-offset-2">

        <!--      Wizard container        -->
        <div class="wizard-container">
            <div class="card wizard-card ct-wizard-azzure" id="wizard">
                <!--        You can switch "ct-wizard-azzure"  with one of the next bright colors: "ct-wizard-blue", "ct-wizard-green", "ct-wizard-orange", "ct-wizard-red"             -->

                <div class="wizard-header">
                    <h3>
                        CREATE <b>QUOTE</b> WIZARD <br>
                        <small>Simple step by step process of creating quote.</small>
                    </h3>
                </div>
                <ul>
                    <li><a href="#details" data-toggle="tab">Customer</a></li>
                    <li><a href="#captain" data-toggle="tab">Job Address</a></li>
                    <li><a href="#jobinfo" data-toggle="tab">Job Info</a></li>
                    <li><a href="#description" data-toggle="tab">Measures</a></li>
                    <li><a href="#stone" data-toggle="tab">Stone</a></li>
                    <li><a href="#sink" data-toggle="tab">Sink</a></li>
                    @*<li><a href="#service" data-toggle="tab">Services</a></li>*@
                    <li><a href="#summary" data-toggle="tab">Summary</a></li>
                </ul>

                <div class="tab-content">
                    <form>

                    </form>
                    <div class="tab-pane" id="details">
                        <form>
                            <div class="row">
                                <div class="col-sm-12">
                                    <h4 class="info-text"> Let's start with the customer details</h4>
                                </div>
                                <div class="col-sm-5 col-sm-offset-1">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.FirstName)
                                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.FirstName)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-5">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.LastName, new { @class = "control-label col-sm-3" })
                                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.LastName)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-5 col-sm-offset-1">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.Phone, new { @class = "control-label col-sm-3" })
                                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.Phone)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-5">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.Email, new { @class = "control-label col-sm-3" })
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.Email)
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </form>
                    </div>
                    <div class="tab-pane" id="captain">
                        <h4 class="info-text"> Enter the job location</h4>
                        <form>
                            <div class="row">
                                <div class="col-sm-5 col-sm-offset-1">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.Address, new { @class = "control-label col-sm-3" })
                                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.Address)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-5">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.City, new { @class = "control-label col-sm-3" })
                                        @Html.TextBoxFor(m => m.City, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.City)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-5 col-sm-offset-1">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.State, new { @class = "control-label col-sm-3" })
                                        @Html.TextBoxFor(m => m.State, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.State)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-5">
                                    <div class="form-group">
                                        @Html.LabelFor(m => Model.Zip, new { @class = "control-label col-sm-3" })
                                        @Html.TextBoxFor(m => m.Zip, new { @class = "form-control required" })
                                        <div>
                                            @Html.ValidationMessageFor(m => m.Zip)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="tab-pane" id="jobinfo">
                        <h4 class="info-text"> Enter the job info</h4>
                        <form>
                            <div class="row">
                                <div class="col-lg-8 col-md-offset-2" style="height:235px;overflow-y:scroll;">
                                    <ul class="list-group">
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left"><strong>Job #:</strong></span>
                                            @Html.TextBoxFor(m => m.Id, new { @class = "form-control", disabled = "disabled" })
                                        </li>                                        
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left"><strong>User Job No:</strong></span>
                                            @Html.TextBoxFor(m => m.JobNo, new { @class = "form-control" })
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Verified?</span><br />
                                            @*<label class="form-control" style="margin-bottom:0;">
                                                @Html.CheckBoxFor(m => m.Verified, new { style = "" })
                                            </label>*@
                                            <select name="Verified" id="Verified" class="form-control">
                                                <option value="FALSE">No</option>
                                                <option value="TRUE">Yes</option>
                                            </select>
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Pay Status:</span>
                                            @Html.DropDownListFor(m => m.PayStatus, new SelectList((System.Collections.IEnumerable)ViewBag.PayStatus, "Value", "Text"), "", new { @class = "form-control" })
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Backsplash:</span>
                                            @Html.DropDownListFor(m => m.Backsplash, new SelectList((System.Collections.IEnumerable)ViewBag.Backsplash, "Value", "Text"), "", new { @class = "form-control" })
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Lead:</span>
                                            @Html.DropDownListFor(m => m.Lead, new SelectList((System.Collections.IEnumerable)ViewBag.Lead, "Value", "Text"), "", new { @class = "form-control" })
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Date Created:</span><br />
                                            <div class="input-group date">
                                                @Html.TextBoxFor(m => m.DateCreated, new { @class = "form-control required", @Value = @DateTime.Now.ToString("MM-dd-yyyy") })
                                                <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                            </div>
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Salesman:</span>
                                            @Html.DropDownListFor(m => m.Salesman, new SelectList((System.Collections.IEnumerable)ViewBag.Salesman, "Value", "Text"), "", new { @class = "form-control" })
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Task Date:</span><br />
                                            <div class="input-group  date">
                                                @Html.TextBoxFor(m => m.TaskDate, new { @class = "form-control required", @Value = @DateTime.Now.ToString("MM-dd-yyyy") })
                                                <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                            </div>
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Task Time:</span><br />
                                            @Html.TextBoxFor(m => m.TaskTime, new { @class = "form-control required" })
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Task Status:</span>
                                            @Html.DropDownListFor(m => m.TaskStatus, new SelectList((System.Collections.IEnumerable)ViewBag.TaskStatus, "Value", "Text"), "", new { @class = "form-control" })
                                        </li>
                                        <li class="list-group-item text-right col-sm-6">
                                            <span class="pull-left">Assigned To:</span>
                                            @Html.DropDownListFor(m => m.AssignedTo, new SelectList((System.Collections.IEnumerable)ViewBag.AssignedTo, "Value", "Text"), "", new { @class = "form-control" })
                                        </li>
                                    </ul>
                                </div>

                            </div>
                        </form>
                    </div>
                    <div class="tab-pane" id="description" ng-controller="MeasureCtrl">
                        <div class="row">
                            <h4 class="info-text"> Enter the measurements of your contertop assets here </h4>                           
                                <div class="col-md-6 col-md-offset-3">
                                    <table id="tblMeasures" class="table table-condensed borderless" style="margin-bottom:0;">
                                        <thead>
                                            <tr>
                                                <th>Measure</th>
                                                <th>Length</th>
                                                <th>Width</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr ng:repeat="item in measures.items">
                                                <td>
                                                    <input id="measure" type="text" class="form-control input-xs" style="min-width:160px" value="{{$index + 1}}" />
                                                </td>
                                                <td><input id="length" type="text" class="form-control input-xs" name="length" value="" ng-model="item.length" /></td>
                                                <td><input id="width" type="text" class="form-control input-xs" name="width" value="" ng-model="item.width" /></td>
                                                <td>
                                                    <a href ng-click="removeItem($index)" class="btn btn-danger btn-xs" title="remove this measure">X</a>
                                                </td>
                                            </tr>
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td colspan="5"><a data-ng-click="addItem()" class="btn btn-primary btn-xs" title="Add Measurement">&nbsp;+&nbsp;</a></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                    <p class="alert alert-block alert-info" ng-show="total() > 0">Total SF: <span class="pull-right">{{ total() }}</span></p>

                                </div>
</div>
                    </div>
                    <div class="tab-pane" id="stone" ng-controller="StoneCtrl" >
                        <div class="row">
                            <h4 class="info-text"> Select Stone Color & Edge and hold Slabs from Inventory </h4>
                            <div class="col-sm-10 col-sm-offset-2" >
                                <div class="col-sm-5">
                                    @Html.DropDownList("ddlStone", new SelectList((System.Collections.IEnumerable)ViewBag.Stones, "Value", "Text"), "", new { @class = "form-control", ng_model = "stoneId", ng_change = "loadInventory(stoneId)" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.DropDownList("ddlEdge", new SelectList((System.Collections.IEnumerable)ViewBag.Edges, "Value", "Text"), "", new { @class = "form-control", ng_model = "edgeId" })
                                </div> 
                                <p>&nbsp;</p>        
                                <p>&nbsp;</p>                        
                            </div>
                            <div class="col-sm-12 col-sm-offset-1">
                                <table class="table table-condensed table-bordered" id="InventoryTable" style="width:720px;">
                                    <thead>
                                        <tr>
                                            <th>Stone</th>
                                            <th ng-show="stoneId != -1">Serial No</th>
                                            <th ng-show="stoneId != -1">Lot No</th>
                                            <th ng-show="stoneId == -1">Edge</th>
                                            <th>Vendor</th>
                                            <th>Cons</th>
                                            <th>Qty</th>
                                            <th>Unit Price</th>
                                            <th>Total</th>
                                            <th><span ng-show="stoneId != -1">Hold Status</span><span ng-show="stoneId == -1">Action</span></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="inventory in inventoryModel" ng-show="stoneId != -1">
                                            <td>{{ inventory.StoneName }}</td>
                                            <td>{{ inventory.SerialNo }}</td>
                                            <td>{{ inventory.LotNo }}</td>
                                            <td>{{ inventory.VendorName }}</td>
                                            <td><span ng-show="inventory.Consignment == true" title="Consignment" class="fa fa-check"></span></td>
                                            <td>{{ inventory.SF |  number : 2 }}</td>
                                            <td>{{ inventory.UnitPrice | currency }}</td>
                                            <td>{{ inventory.Total | currency  }}</td>
                                            <td>
                                                <button class="btn btn-xs btn-success" ng-click="holdInventory(edgeId)" ng-disabled="edgeId == null || edgeId == '' || inventory.DateSold != null || inventory.QuoteId != null && inventory.QuoteId != -1">
                                                    {{ inventory.QuoteId == null ? 'Available' : inventory.DateSold == null ? 'Hold' : 'Sold' }}
                                                </button>
                                            </td>
                                        </tr>


                                        <tr ng-repeat="inventory in holdinv"  ng-show="stoneId == -1" class="trhold">
                                            <td>{{ inventory.StoneName }}<input type="hidden" value="{{inventory.Id}}" id="HoldStones" name="HoldStones" /></td>
                                            <td>{{ inventory.LotNo }}<input type="hidden" value="{{inventory.SerialNo}}" id="HoldEdges" name="HoldEdges" /></td>
                                            <td>{{ inventory.VendorName }}</td>
                                            <td><span ng-show="inventory.Consignment == true" title="Consignment" class="fa fa-check"></span></td>
                                            <td>{{ inventory.SF |  number : 2 }}</td>
                                            <td>{{ inventory.UnitPrice | currency }}</td>
                                            <td>{{ inventory.Total | currency  }}</td>
                                            <td>
                                                <button class="btn btn-xs btn-danger" ng-click="holdInventory()" ng-disabled="inventory.DateSold != null || inventory.QuoteId != null && inventory.QuoteId != -1">
                                                    {{ inventory.QuoteId == null ? 'Available' : inventory.DateSold == null ? 'Unhold' : 'Sold' }}
                                                </button>
                                            </td>
                                        </tr>
                                        <tr ng-show="total() > 0">
                                            <td colspan="9" class="text-right subtotal">Subtotal: <span class="subtotal">{{total() | currency }}</span><span class="pull-left"><button class="btn btn-xs btn-warning" ng-click="stoneId = -1;" ng-hide="stoneId == -1">Show Hold Items</button></span> </td>
                                        </tr>
                                    </tbody>
                                    <tfoot>

                                    </tfoot>
                                </table>
                                <table id="tblHoldStones">
                                    <tbody>
                                        <tr ng-repeat="hold in holdinv">

                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        
                    </div>
                    <div class="tab-pane" id="sink"  ng-controller="SinkCtrl">
                        <div class="row">
                            <h4 class="info-text"> Select Sink from Inventory </h4>
                            <div class="col-sm-10  col-sm-offset-4">
                                <div class="col-sm-5">
                                    @Html.DropDownList("ddlSink", new SelectList((System.Collections.IEnumerable)ViewBag.Sinks, "Value", "Text"), "", new { @class = "form-control", ng_model = "sinkId", ng_change = "loadInventory(sinkId)" })
                                </div>
                                <p>&nbsp;</p>
                                <p>&nbsp;</p>
                            </div>
                            <div class="col-sm-12 col-sm-offset-1">
                                <table class="table table-condensed table-bordered" id="SinkInventoryTable" style="width:720px;">
                                    <thead>
                                        <tr>
                                            <th>Sink</th>
                                            <th>Serial No</th>
                                            <th>Vendor</th>
                                            <th>Unit Price</th>
                                            <th>Total</th>
                                            <th><span ng-show="sinkId != -1">Hold Status</span><span ng-show="sinkId == -1">Action</span></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="sinkInventory in inventoryModel" ng-show="sinkId != -1">
                                            <td>{{ sinkInventory.SinkName }}</td>
                                            <td>{{ sinkInventory.SerialNo }}</td>
                                            <td>{{ sinkInventory.VendorName }}</td>
                                            <td>{{ sinkInventory.UnitPrice | currency }}</td>
                                            <td>{{ sinkInventory.Total | currency  }}</td>
                                            <td>
                                                <button class="btn btn-xs btn-success" ng-click="holdInventory()" ng-disabled="sinkInventory.DateSold != null || sinkInventory.QuoteId != null && sinkInventory.QuoteId != -1">
                                                    {{ sinkInventory.QuoteId == null ? 'Available' : sinkInventory.DateSold == null ? 'Hold' : 'Sold' }}
                                                </button>
                                            </td>
                                        </tr>


                                        <tr ng-repeat="sinkInventory in holdinv" ng-show="sinkId == -1" class="trhold">
                                            <td>{{ sinkInventory.SinkName }}<input type="hidden" value="{{sinkInventory.Id}}" id="HoldSinks" name="HoldSinks" /></td>
                                            <td>{{ sinkInventory.SerialNo }}</td>
                                            <td>{{ sinkInventory.VendorName }}</td>
                                            <td>{{ sinkInventory.UnitPrice | currency }}</td>
                                            <td>{{ sinkInventory.Total | currency  }}</td>
                                            <td>
                                                <button class="btn btn-xs btn-danger" ng-click="holdInventory()" ng-disabled="sinkInventory.DateSold != null || sinkInventory.QuoteId != null && sinkInventory.QuoteId != -1">
                                                    {{ sinkInventory.QuoteId == null ? 'Available' : sinkInventory.DateSold == null ? 'Unhold' : 'Sold' }}
                                                </button>
                                            </td>
                                        </tr>
                                        <tr ng-show="total() > 0">
                                            <td colspan="6" class="text-right subtotal">Subtotal: <span class="subtotal">{{total() | currency }}</span><span class="pull-left"><button class="btn btn-xs btn-warning" ng-click="sinkId = -1;" ng-hide="sinkId == -1">Show Hold Items</button></span> </td>
                                        </tr>
                                    </tbody>
                                    <tfoot>

                                    </tfoot>
                                </table>
                            </div>

                        </div>

                    </div>
                    <div class="tab-pane" id="summary"  ng-controller="SummaryCtrl">
                        <div class="row">
                            <h4 class="info-text"> Summary </h4>
                            <form>
                                <div class="col-sm-10 col-sm-offset-1">
                                    <div class="col-sm-6">
                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-3" for="stoneTotal">Total Stone</label>
                                                <div class="col-sm-9">
                                                    <input type="text" value="{{ stoneTotal | currency }}" id="stoneTotal" name="stoneTotal" class="form-control" readonly />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-3" for="sinkTotal">Total Sink</label>
                                                <div class="col-sm-9">
                                                    <input type="text" value="{{ sinkTotal | currency }}" id="sinkTotal" name="sinkTotal" class="form-control" readonly />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => Model.FabPrice, new { @class = "control-label col-sm-3" })
                                                <div class="col-sm-9">
                                                    @Html.TextBoxFor(m => m.FabPrice, new { @class = "form-control", @placeholder = "Fabrication and Install Price", data_ng_model = "FabPrice",
                                                   data_ng_init = string.Format("FabPrice = '{0}'", Model.FabPrice)
                                               })
                                                    <div>
                                                        @Html.ValidationMessageFor(m => m.FabPrice)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-3" for="JobCost">Job Cost</label>
                                                <div class="col-sm-9">
                                                    <input type="text" value="{{ JobCost | currency }}" id="JobCost" name="JobCost" class="form-control" readonly />
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(m => Model.TotalCost, new { @class = "control-label col-sm-3" })
                                                <div class="col-sm-9">
                                                    @Html.TextBoxFor(m => m.TotalCost, new { @class = "form-control", @placeholder = "Enter your total cost" })
                                                    <div>
                                                        @Html.ValidationMessageFor(m => m.TotalCost)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-horizontal">

                                        </div>
                                    </div>

                                    <p>&nbsp;</p>
                                    <p>&nbsp;</p>
                                </div>
                            </form>
                        </div>
                    </div>

                </div>

                <div class="wizard-footer">
                    <div class="pull-right">
                        <input type='button' class='btn btn-next btn-fill btn-info btn-wd btn-sm' name='next' value='Next' />
                        <input type='button' class='btn btn-finish btn-fill btn-info btn-wd btn-sm' name='finish' value='Finish' />

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-default btn-wd btn-sm' name='previous' value='Previous' />
                    </div>
                    <div class="clearfix"></div>
                </div>

            </div>
        </div> <!-- wizard container -->
    </div>
</div>


@section scripts{
    <script src="@Url.Content("~/Scripts/jquery.bootstrap.wizard.js")"></script>
    <script src="@Url.Content("~/Scripts/wizard.js")"></script>

<script src="@Url.Content("~/Scripts/angular.min.js")"></script>
    @*<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js"></script>*@
    <script src="@Url.Content("~/Scripts/ui-bootstrap-tpls.min.js")"></script>

    <script src="@Url.Content("~/Scripts/Appjs/ng-wizard.js")"></script>

    <script src="@Url.Content("~/Scripts/bootstrap-datepicker.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        function SetUpPickers() {
            $('.input-group.date').datepicker({
                format: 'mm/dd/yyyy'
            });
        };

        $(document).ready(function () {
            SetUpPickers();
        });
    </script>



}