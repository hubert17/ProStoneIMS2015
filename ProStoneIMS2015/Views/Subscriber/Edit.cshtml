    @model ProStoneIMS2015.Models.Subscriber

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 class="modal-title">Edit Record</h3>
    </div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m=>m.TenantId)

        <div class="modal-body">

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => Model.CompanyName, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.CompanyName)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.FirstName, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.FirstName)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.LastName, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.LastName)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.Street, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Street, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.Street)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.Address, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.Address)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.City, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.City)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.State, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.State, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.State)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.Zip, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Zip, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.Zip)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.Phone, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.Phone)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.Email, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.AltEmail, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.AltEmail, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.AltEmail)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.CustomerContactEmail, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.CustomerContactEmail, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.CustomerContactEmail)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.CustomerContactPhone, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.CustomerContactPhone, new { @class = "form-control required" })
                        <div>
                            @Html.ValidationMessageFor(m => m.CustomerContactPhone)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => Model.Inactive, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        <label class="form-control">
                            @Html.CheckBoxFor(m => m.Inactive, new { style = "margin-left:5px;" })
                        </label>
                    </div>
                </div>


            </div>
        </div>

        <div class="modal-footer">
            <span id="progress" class="text-center" style="display: none;">
                <img src="images/wait.gif" alt="..." />
                Wait...
            </span>

            <input class="btn btn-primary" type="submit" value="Save" />
            <button class="btn btn-warning" data-dismiss="modal">Close</button>
        </div>
    }
    <script>
        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");
    </script>
